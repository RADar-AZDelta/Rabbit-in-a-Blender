{#- Copyright 2024 RADar-AZDelta -#}
{#- SPDX-License-Identifier: gpl3+ -#}
{%- if events.keys()|length > 0  or omop_table == "vocabulary" %}
{#- MERGE INTO [{{work_database_catalog}}].[{{work_database_schema}}].[{{omop_table}}` AS T -#}
TRUNCATE TABLE [{{work_database_catalog}}].[{{work_database_schema}}].[{{omop_table}}];
{%- else %}
TRUNCATE TABLE [{{omop_database_catalog}}].[{{omop_database_schema}}].[{{omop_table}}];
{%- endif %}
WITH cte_uploaded_tables AS (
    {%- for upload_table in upload_tables -%}
        {%- if not loop.first %}
    UNION ALL
        {%- endif %}
    SELECT *
    FROM [{{work_database_catalog}}].[{{work_database_schema}}].[{{omop_table}}__upload__{{upload_table}}]
    {%- endfor %}
), cte_keys_swapped as (
    SELECT 
        {%- set ns = namespace(fk_counter=0, ci_counter=0) -%}
        {%- for column in columns -%}
            {%- if not loop.first -%}
                {{','}}
            {%- endif %}
        {% if column == primary_key_column -%}
            {%- if pk_auto_numbering -%}
                swap_pk.y as [{{column}}]
            {%- else -%}
                t.[{{column}}] as [{{column}}]
            {%- endif -%}
        {%- elif column in foreign_key_columns -%}
            {%- if column == 'cost_domain_id' -%}
            COALESCE(swap_fk{{ns.fk_counter}}.domain_id, "?") as [{{column}}]
            {%- elif column in required_columns -%}
            COALESCE(swap_fk{{ns.fk_counter}}.y, 0) as [{{column}}]
            {%- else -%}
            swap_fk{{ns.fk_counter}}.y as [{{column}}]
            {%- endif -%}
            {%- set ns.fk_counter = ns.fk_counter + 1 -%}
        {%- elif column in concept_id_columns -%}
            {%- if not column in events.values() -%}
            COALESCE(swap_ci{{ns.ci_counter}}.conceptId, 0) as [{{column}}]
            {%- set ns.ci_counter = ns.ci_counter + 1 -%}
            {%- else -%}
            t.[{{column}}] as [{{column}}]
            {%- endif -%} 
        {%- elif column.endswith("_source_value") and pk_auto_numbering -%}
            LEFT(STRING_AGG(t.[{{column}}], ', '), 255) as [{{column}}] 
        {%- else -%}
            t.[{{column}}]
        {%- endif %}
        {%- endfor %}
    FROM cte_uploaded_tables t
    {%- set ns = namespace(ci_counter=0) -%}
    {%- for column in concept_id_columns %}
        {%- if not column in events.values() %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[{{omop_table}}__{{column.lower()}}_usagi] swap_ci{{ns.ci_counter}} on swap_ci{{ns.ci_counter}}.sourceCode = t.[{{column}}]
            {% if not process_semi_approved_mappings -%}
        and swap_ci{{ns.ci_counter}}.mappingStatus = 'APPROVED'
            {%- else -%}
        and swap_ci{{ns.ci_counter}}.mappingStatus in ('APPROVED', 'SEMI-APPROVED')
            {%- endif -%}        
        {%- set ns.ci_counter = ns.ci_counter + 1 -%}
        {%- endif -%}
    {%- endfor %}
    {%- if pk_auto_numbering %}
    INNER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[{{primary_key_column}}_swap] swap_pk on swap_pk.x = t.{{primary_key_column}}
        {%- set ns = namespace(ci_counter=0) -%}
        {%- for column in concept_id_columns %}
            {%- if not column in events.values() %}
        and COALESCE(swap_pk.[{{column}}], 0) = COALESCE(swap_ci{{ns.ci_counter}}.conceptId, 0)
                {%- set ns.ci_counter = ns.ci_counter + 1 -%}
            {%- else %}
        and COALESCE(swap_pk.[{{column}}], '') = COALESCE(t.[{{column}}], '')
            {%- endif -%}
        {%- endfor %} 
        {%- for column in events %}
        and COALESCE(swap_pk.[{{column}}], '') = COALESCE(t.[{{column}}], '')
        {%- endfor %}
    {%- endif -%}
    {%- set ns = namespace(fk_counter=0) -%}
    {%- for column in foreign_key_columns %}
        {%- if column == 'preceding_visit_occurrence_id' %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[visit_occurrence_id_swap] swap_fk{{ns.fk_counter}} on swap_fk{{ns.fk_counter}}.x = t.[{{column}}]
        {%- elif column == 'preceding_visit_detail_id' %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[visit_detail_id_swap] swap_fk{{ns.fk_counter}} on swap_fk{{ns.fk_counter}}.x = t.[{{column}}]                
        {%- elif column == 'parent_visit_detail_id' %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[visit_detail_id_swap] swap_fk{{ns.fk_counter}} on swap_fk{{ns.fk_counter}}.x = t.[{{column}}]            
        {%- elif column == 'episode_parent_id' %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[episode_id_swap] swap_fk{{ns.fk_counter}} on swap_fk{{ns.fk_counter}}.x = t.[{{column}}]  
        {%- elif column == 'cost_domain_id' %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[domain] swap_fk{{ns.fk_counter}} on swap_fk{{ns.fk_counter}}.domain_id = t.[{{column}}] 
        {%- else %}
    LEFT OUTER JOIN [{{work_database_catalog}}].[{{work_database_schema}}].[{{column}}_swap] swap_fk{{ns.fk_counter}} on swap_fk{{ns.fk_counter}}.x = t.[{{column}}]
        {%- endif -%}
        {%- set ns.fk_counter = ns.fk_counter + 1 -%}
    {%- endfor %} 
   GROUP BY --IF TO SLOW WE REMOVE THE STRING_AGG and the GROUP BY
        {%- set ns = namespace(fk_counter=0, ci_counter=0) -%}
        {%- for column in columns -%}
        {%- if not (column.endswith("_source_value") and pk_auto_numbering) -%}
            {%- if not loop.first -%}
                {{','}}
            {%- endif %}
        {% if column == primary_key_column -%}
            {%- if pk_auto_numbering -%}
                swap_pk.y
            {%- else -%}
                t.[{{column}}]
            {%- endif -%}
        {%- elif column in foreign_key_columns -%}
            {%- if column in required_columns -%}
            COALESCE(swap_fk{{ns.fk_counter}}.y, 0)
            {%- else -%}
            swap_fk{{ns.fk_counter}}.y
            {%- endif -%}
            {%- set ns.fk_counter = ns.fk_counter + 1 -%}
        {%- elif column in concept_id_columns -%}
            {%- if not column in events.values() -%}
            COALESCE(swap_ci{{ns.ci_counter}}.conceptId, 0)
            {%- set ns.ci_counter = ns.ci_counter + 1 -%}
            {%- else -%}
            t.[{{column}}]
            {%- endif -%} 
        {%- else -%}
            t.[{{column}}]
        {%- endif %}
        {%- endif %}
        {%- endfor %}
), cte_duplicates AS (
    SELECT *
        , ROW_NUMBER() OVER(
            PARTITION BY 
            {%- if omop_table == 'fact_relationship' %}
                fact_id_1
                , fact_id_2
            {%- elif omop_table == 'death' %}
                person_id
            {%- elif omop_table == 'cdm_source' %}
                cdm_source_name
            {%- elif omop_table == 'episode_event' %}
                episode_id                
            {%- elif primary_key_column %}
                {{primary_key_column}}
            {%- endif -%}
            {%- for column in concept_id_columns %}
                , [{{column}}]
            {%- endfor -%}
            {%- for column in events %}
                {%- if omop_table != 'fact_relationship' %}
                , [{{column}}]
                {%- endif -%}
            {%- endfor %}
            ORDER BY 
            {%- for column in columns -%}
                {%- if not loop.first -%}
                    {{','}}
                {%- endif %}
                [{{column}}]
            {%- endfor %}
            ) AS rn
    FROM cte_keys_swapped
)
{% if events.keys()|length > 0 or omop_table == "vocabulary" %}
{#- MERGE INTO [{{work_database_catalog}}].[{{work_database_schema}}].[{{omop_table}}` AS T -#}
INSERT INTO [{{work_database_catalog}}].[{{work_database_schema}}].[{{omop_table}}]
{%- else %}
INSERT INTO [{{omop_database_catalog}}].[{{omop_database_schema}}].[{{omop_table}}]
{%- endif %}
SELECT *
FROM (
    SELECT 
    {%- for column in columns -%}
        {%- if not loop.first -%}
            {{','}}
        {%- endif %}
        [{{column}}]
    {%- endfor %}
    FROM cte_duplicates 
    WHERE rn = 1

    {%- if omop_table == "vocabulary" %}
    UNION ALL
    SELECT *
    FROM [{{omop_database_catalog}}].[{{omop_database_schema}}].[vocabulary]
    WHERE vocabulary_concept_id < {{min_custom_concept_id}}
    {%- endif %}
) S;
{% if omop_table == "vocabulary" %}
TRUNCATE TABLE [{{omop_database_catalog}}].[{{omop_database_schema}}].[{{omop_table}}]; 
INSERT INTO [{{omop_database_catalog}}].[{{omop_database_schema}}].[vocabulary]
SELECT * 
FROM [{{work_database_catalog}}].[{{work_database_schema}}].[vocabulary];
{%- endif %}
{#- ) AS S 
{% if omop_table == 'fact_relationship' -%}
    ON S.fact_id_1 = T.fact_id_1 and S.fact_id_2 = T.fact_id_2
{%- elif omop_table == 'death' -%}
    ON S.person_id = T.person_id
{%- elif omop_table == 'cdm_source' -%}
    ON S.cdm_source_name = T.cdm_source_name
{%- elif primary_key_column -%}
    ON S.{{primary_key_column}} = T.{{primary_key_column}}
{%- else -%}
    ON TRUE = TRUE
{%- endif %}
{%- for column in concept_id_columns %}
    {% if not column in events.values() -%}
    and S.[{{column}}] = T.[{{column}}]
    {%- else -%}
    and coalesce(S.[{{column}}], '') = coalesce(T.[{{column}}], '')
    {%- endif -%} 
{%- endfor %}
{%- for column in events %}
    {% if omop_table != 'fact_relationship' -%}
    and coalesce(S.[{{column}}], '') = coalesce(T.[{{column}}], '')
    {%- endif %}
{%- endfor %}
WHEN MATCHED THEN
    UPDATE SET 
        {%- for column in columns if (column != primary_key_column and omop_table != "death") or (omop_table == "death" and column != "person_id") -%}
            {% if not loop.first -%}
                {{','}}
            {%- endif %}
        [{{column}}] = S.[{{column}}]
        {%- endfor %}
WHEN NOT MATCHED THEN
    INSERT ROW -#}