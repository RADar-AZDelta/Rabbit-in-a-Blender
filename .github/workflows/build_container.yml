name: Docker Image Publish

on:
  workflow_run:
    workflows: 
      - 'Publish Python üêç distribution üì¶ to PyPI'
    types: 
      - completed
    # tags:
    #   - '*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    #if: startsWith(github.ref, 'refs/tags/')  # only Build container on tag pushes
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: 
          submodules: 'true'
          fetch-depth: 0  # Fetch all tags and commit history to ensure we can access the tag

      # - name: Fetch the Git tag
      #   id: get_tag
      #   run: |
      #     TAG=$(git describe --tags --abbrev=0)
      #     echo "TAG=${TAG}" >> $GITHUB_ENV

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=false
            type=ref,event=tag,value=${{ github.ref_name }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
